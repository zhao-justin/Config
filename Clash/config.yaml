# 本地HTTP(S)端口
# port: 7890

# 本地SOCKS5端口
# socks-port: 7891

# 透明代理端口Linux and macOS (Redirect TCP and TProxy UDP)
# redir-port: 7892

# 透明代理端口Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

# HTTP(S)和SOCKS5同一端口
mixed-port: 9090

# 允许LAN上的其他设备通过Clash访问Internet。
allow-lan: true

# 通过具有特定IP地址的lan访问
# "*": 绑定所有IP地址
# 192.168.122.11: 绑定单个IPv4地址
# "[aaaa::a8aa:ff:fe09:57d8]": 绑定单个IPv6地址
# bind-address: "*"

# 本地SOCKS5/HTTP（S）服务器的身份验证
# authentication: 
#   - "user1:password1"
#   - "user2:word2"

# Clash 模式选择
# global 全局模式
# rule   规则模式 (默认) 
# direct 直连模式
# script 脚本模式
mode: rule

# Clash核心的日志级别 
# Debug 将显示所有DNS查询和提供程序更新日志
# Debug 不会引起任何性能问题
# silent   静默
# error    错误
# warning  警告
# info     信息
# debug    调试
log-level: silent

# 外部控制器可以通过 RESTful API 从外部控制Clash
external-controller: 127.0.0.1:7665
# RESTful API的密码 (可选)
secret: '4b2be6bd-0b6c-49b1-b42f-dc8482110b8b'

# 您可以将静态web资源(如clash dashboar)放到一个目录中,clash将在${API}/ui中提供服务
# 输入是配置目录的相对路径或绝对路径
# external-ui: folder

# 出站接口名称
# interface-name: eth0

# 不知道是什么意思反正是Linux上面的
# Provide a default mark for outbound connections under Linux.
# routing-mark: 6666

# 实验性选择
experimental:
  # 将忽略dns解析失败,继续匹配规则,默认值为true
  # ignore-resolve-fail: true

  # 将在启动请求时连接到ipv6地址
  # 默认值为false,它只建立到v4地址的连接。
  # ipv6: false

hosts:
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# 某些配置信息,部分功能仅适用于Premium内核
profile:

  tracing: true

  # Store the `select` results in $HOME/.config/clash/.cache
  # set false If you don't want this behavior
  # when two different configurations have groups with the same name, the selected values are shared
  store-selected: true

  # persistence fakeip
  store-fake-ip: true

# cfw 仅有
# 开启系统代理时将忽略这些域(或ip地址)
cfw-bypass:
  - "<local>"
  - 10.*
  - 127.*
  - 172.16.*
  - 172.17.*
  - 172.18.*
  - 172.19.*
  - 172.20.*
  - 172.21.*
  - 172.22.*
  - 172.23.*
  - 172.24.*
  - 172.25.*
  - 172.26.*
  - 172.27.*
  - 172.28.*
  - 172.29.*
  - 172.30.*
  - 172.31.*
  - 192.168.*
  - localhost
